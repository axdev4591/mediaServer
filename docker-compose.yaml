services:
  jenkins:
    build:
      context: ./Jenkins
      dockerfile: Dockerfile  # Custom Dockerfile for Jenkins
    container_name: jenkins
    ports:
      - "8010:8080"   # Jenkins web UI
      - "50000:50000" # Jenkins agent
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    networks:
      - ci-network
    environment:
      - JENKINS_OPTS=--httpPort=8080
  prometheus:
    image: prom/prometheus:v2.18.1
    restart: always
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - ci-network

  grafana:
    image: grafana/grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - ci-network

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"  # SonarQube web UI
    networks:
      - ci-network
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
  node-exporter:
    image: prom/node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    expose:
      - 9100
    networks:
      - ci-network

  alertmanager:
    image: prom/alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    restart: always
    networks:
      - ci-network
    
    
  web_server:
    image: httpd:2.4
    ports:
      - '80:80'
    restart: always
    networks:
      - ci-network

networks:
  ci-network:
    driver: bridge

volumes:
  jenkins_data:
  prometheus_data: {}
  grafana_data: {}
